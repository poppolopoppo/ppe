# PPE TODO LIST

- Check efficiency of mipmaps de-commit heuristic
    -> avoiding switching to newest chunk might help
    -> use the fragmentation report

- Add a large mipmap allocator inside FMallocBinned in addition to current medium mipmaps
    -> current medium mips can't allocate more than 2mb, and virtual memory cache is weak (concurrency bottleneck)
        -> large mips would have 2mb/bit <=> 64mb per chunk
        -> could use large mips to allocate medium mips
        -> this could avoid reserving/commiting too much memory and achieve better load balancing
    -> *OR* implement a system that can allocate from several contiguous mips
        -> might be done atomically at the end of the mip table
        -> allocations would be aligned on mip granularity <=> 2mb
        -> should cap allocation size to something reasonnable, like 64mb
        -> could work better than virtual memory cache with a careful implementation

- Remove memory domain PooledMemory
    -> mirror linear heap behavior ?
    -> maybe remove completely ???

- Finish the build graph :p

- Integrate AMD's texture library for content pipeline (replacing clunky STB)
- Integrate AMD's mesh library for content pipeline (replacing old custom code)
