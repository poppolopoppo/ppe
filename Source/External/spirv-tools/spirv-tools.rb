# frozen_string_literal: true

$Build.ppe_external!('spirv-tools') do
    force_includes!(File.join(abs_path, 'Public', 'spirv-tools-external.h'))
    extra_files!(
        'Public/spirv-tools-external.h',
        *Build.spirv_tools_headers(false) )
    source_files!(*%w{
        Private/spirv-tools.cpp
        })
    custom!() do |env, target|
        libraries << target.source_path(env, Build.spirv_tools_libraries(env.config.debug?))
    end
    generate!('spirv-tools-headers.generated.h', :public) do |facet, env, io|
        io.heredoc! %{
#pragma once
// SPIRV-Tools headers forwarding generated by #{Build::Script} v#{Build::VERSION}
}
        debug = env.config.debug?
        include_path = Build.spirv_tools_include_path(debug)
        Build.spirv_tools_headers(debug).each do |header|
            abs = source_path(env, header)
            inc = Pathname.new(abs).relative_path_from(include_path).to_s
            rel = Pathname.new(abs).relative_path_from($SourcePath).to_s
            io.puts!('#pragma include_alias("%s", "%s")' % [inc, rel])
        end
    end
end
