#pragma once

#include "Core/Core.h"

#include "Core/Allocator/AllocatorBase.h"
#include "Core/Allocator/HeapAllocator.h"

namespace Core {
//----------------------------------------------------------------------------
//////////////////////////////////////////////////////////////////////////////
//----------------------------------------------------------------------------
extern Heap& GetThreadLocalHeap();
//----------------------------------------------------------------------------
namespace Heaps {
//----------------------------------------------------------------------------
struct ThreadLocal {
    static Heap& Instance() { return Core::GetThreadLocalHeap(); }
};
//----------------------------------------------------------------------------
} //!namespace Heaps
//----------------------------------------------------------------------------
//////////////////////////////////////////////////////////////////////////////
//----------------------------------------------------------------------------
template <typename T>
using ThreadLocalAllocator = HeapAllocator<T, Heaps::ThreadLocal>;
//----------------------------------------------------------------------------
//////////////////////////////////////////////////////////////////////////////
//----------------------------------------------------------------------------
} //!namespace Core
