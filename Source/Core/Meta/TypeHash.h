#pragma once

namespace Core {
namespace Meta {
//----------------------------------------------------------------------------
//////////////////////////////////////////////////////////////////////////////
//----------------------------------------------------------------------------
// Gets a unique ID for T (different each run)
//----------------------------------------------------------------------------
template <typename T>
class TypeHash {
public:
    static size_t value() { return size_t(&sTag); }
private:
    static const size_t sTag;
};
//----------------------------------------------------------------------------
template <typename T>
size_t TypeHash<T>::sTag(0);
//----------------------------------------------------------------------------
//////////////////////////////////////////////////////////////////////////////
//----------------------------------------------------------------------------
} //!namespace Meta
} //!namespace Core
