#include "stdafx.h"

#include "Xml.h"

#include "Lexer/Lexer.h"
#include "Lexer/Symbols.h"

#include "IO/TextWriter.h"

namespace PPE {
namespace Serialize {
//----------------------------------------------------------------------------
//////////////////////////////////////////////////////////////////////////////
//----------------------------------------------------------------------------
FXml::FXml() {}
//----------------------------------------------------------------------------
FXml::~FXml() {}
//----------------------------------------------------------------------------
bool FXml::ReadHeaders(Lexer::FLexer& lexer) {
    _version.clear();
    _encoding.clear();
    _standalone.clear();

    if (lexer.ReadIFN("<?xml")) {

        Lexer::FMatch id, value;
        while (lexer.Peek(Lexer::FSymbols::Identifier)) {
            if (not lexer.Expect(id, Lexer::FSymbols::Identifier))
                AssertNotReached();

            FString* pdst;
            if (EqualsI("version", id.MakeView()))
                pdst = &_version;
            else if (EqualsI("encoding", id.MakeView()))
                pdst = &_encoding;
            else if (EqualsI("standalone", id.MakeView()))
                pdst = &_standalone;
            else
                pdst = nullptr;

            if (not lexer.Expect(Lexer::FSymbols::Assignment))
                PPE_THROW_IT(FMarkupException("expected assignment", id.Site()));

            if (not lexer.Expect(value, Lexer::FSymbols::String))
                PPE_THROW_IT(FMarkupException("expected string", id.Site()));

            if (pdst)
                *pdst = value.MakeView();
        }

        lexer.EatWhiteSpaces();

        if (not lexer.ReadIFN("?>"))
            PPE_THROW_IT(FMarkupException("expected closing xml header", id.Site()));
    }

    if (_version.empty())
        _version = "1.0";
    if (_encoding.empty())
        _encoding = "UTF-8";
    if (_standalone.empty())
        _standalone = "yes";

    return true;
}
//----------------------------------------------------------------------------
void FXml::WriteHeaders(FTextWriter& oss, bool minify) const {
    if (not minify)
        oss << "<!-- GENERATED BY PPE.SERIALIZE/MARKUP/XML -->" << Eol;

    oss << "<?xml";

    if (not _version.empty())
        oss << " version=\"" << _version << '"';
    if (not _encoding.empty())
        oss << " encoding=\"" << _encoding << '"';
    if (not _version.empty())
        oss << " standalone=\"" << _standalone << '"';

    oss << " ?>";
    if (not minify)
        oss << Eol;
}
//----------------------------------------------------------------------------
//////////////////////////////////////////////////////////////////////////////
//----------------------------------------------------------------------------
} //!namespace Serialize
} //!namespace PPE
