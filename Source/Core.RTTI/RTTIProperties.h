#pragma once

#include "Core.RTTI/RTTI.h"

#include "Core/Allocator/Allocation.h"
#include "Core/IO/StringView.h"

#include <locale>

namespace Core {
//----------------------------------------------------------------------------
//////////////////////////////////////////////////////////////////////////////
//----------------------------------------------------------------------------
template <
    typename        _Tag,
    typename        _Char,
    Case            _Sensitive,
    typename        _TokenTraits,
    typename        _Allocator
>
class Token;
//----------------------------------------------------------------------------
//////////////////////////////////////////////////////////////////////////////
//----------------------------------------------------------------------------
namespace RTTI {
//----------------------------------------------------------------------------
//////////////////////////////////////////////////////////////////////////////
//----------------------------------------------------------------------------
class TokenTraits {
public:
    TokenTraits() {}
    const std::locale& Locale() const { return std::locale::classic(); }
    bool IsAllowedChar(char ch) const;
};
//----------------------------------------------------------------------------
typedef char char_type;
//----------------------------------------------------------------------------
template <typename _Tag>
using Token = Core::Token<
    _Tag,
    char_type,
    Case::Sensitive,
    TokenTraits,
    ALLOCATOR(RTTI, char_type)
>;
//----------------------------------------------------------------------------
//////////////////////////////////////////////////////////////////////////////
//----------------------------------------------------------------------------
} //!namespace RTTI
//----------------------------------------------------------------------------
//////////////////////////////////////////////////////////////////////////////
//----------------------------------------------------------------------------
} //!namespace Core
