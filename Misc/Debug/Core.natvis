<?xml version="1.0" encoding="utf-8"?>
<AutoVisualizer xmlns="http://schemas.microsoft.com/vstudio/debugger/natvis/2010">
  <!-- https://code.msdn.microsoft.com/windowsdesktop/Writing-type-visualizers-2eae77a2 -->

  <Type Name="Core::Meta::TPointerWFlags&lt;*&gt;">
    <DisplayString>{{ ptr={($T1*)(size_t(_pFlags)&amp;~3)} flag0={(_pFlags&amp;1)!=0} flag1={(_pFlags&amp;2)!=0} flag01={_pFlags&amp;3} }}</DisplayString>
    <Expand>
      <Item Name="Pointer">($T1*)(size_t(_pFlags)&amp;~3)</Item>
      <Item Name="Flag0">(_pFlags&amp;1)!=0</Item>
      <Item Name="Flag1">(_pFlags&amp;2)!=0</Item>
      <Item Name="Flag01">_pFlags&amp;3</Item>
    </Expand>
  </Type>

  <Type Name="Core::TBasicStringView&lt;char&gt;">
    <DisplayString Condition="_size == 0">empty</DisplayString>
    <DisplayString>{_storage,[_size]s} [{_size}]</DisplayString>
    <StringView>_storage,[_size]s</StringView>
  </Type>
  <Type Name="Core::TBasicStringView&lt;wchar_t&gt;">
    <DisplayString Condition="_size == 0">empty</DisplayString>
    <DisplayString>{_storage,[_size]su} [{_size}]</DisplayString>
    <StringView>_storage,[_size]su</StringView>
  </Type>

  <Type Name="Core::TMemoryView&lt;*&gt;">
    <DisplayString Condition="_size == 0">empty</DisplayString>
    <DisplayString>[{_size}]</DisplayString>
    <Expand>
      <Item Name="Size">_size</Item>
      <ArrayItems>
        <Size>_size</Size>
        <ValuePointer>_storage</ValuePointer>
      </ArrayItems>
    </Expand>
  </Type>

  <Type Name="Core::TVectorInSitu&lt;*, *, *&gt;">
    <DisplayString>{{ size={_size}, capacity={_capacity}, insitu={_insituCount/sizeof(value_type)} }}</DisplayString>
    <Expand>
      <Item Name="Size">_size</Item>
      <Item Name="Capacity">_capacity</Item>
      <Item Name="Insitu">_insituCount/sizeof(value_type)</Item>
      <ArrayItems>
        <Size>_size</Size>
        <ValuePointer>_data</ValuePointer>
      </ArrayItems>
    </Expand>
  </Type>
  <Type Name="Core::TVector&lt;*, *&gt;">
    <DisplayString>{{ size={_size}, capacity={_capacity} }}</DisplayString>
    <Expand>
      <Item Name="Size">_size</Item>
      <Item Name="Capacity">_capacity</Item>
      <ArrayItems>
        <Size>_size</Size>
        <ValuePointer>_data</ValuePointer>
      </ArrayItems>
    </Expand>
  </Type>

  <Type Name="Core::THashTable&lt;*, *, *, *, *&gt;">
    <DisplayString>{{ size={_size_capacityIndex&gt;&gt;5}, capacity={Core::details::HashTableCapacityForValue_[_size_capacityIndex&amp;31]} }}</DisplayString>
    <Expand>
      <Item Name="Size">_size_capacityIndex&gt;&gt;5</Item>
      <Item Name="Capacity for hashes">Core::details::HashTableCapacityForHash_[_size_capacityIndex&amp;31]</Item>
      <Item Name="Capacity for values">Core::details::HashTableCapacityForValue_[_size_capacityIndex&amp;31]</Item>
      <ArrayItems>
        <Size>_size_capacityIndex&gt;&gt;5</Size>
        <ValuePointer>_values_hashIndices</ValuePointer>
      </ArrayItems>
    </Expand>
  </Type>

  <Type Name="Core::TRawStorage&lt;*, *&gt;">
    <DisplayString>{{ size={_size} }}</DisplayString>
    <Expand>
      <Item Name="size">_size</Item>
      <ArrayItems>
        <Size>_size</Size>
        <ValuePointer>_storage</ValuePointer>
      </ArrayItems>
    </Expand>
  </Type>

  <Type Name="Core::TRingBuffer&lt;*, *&gt;">
    <DisplayString>{{ begin={_begin}, size={_size}, capacity={_capacity} }}</DisplayString>
    <Expand>
      <Item Name="Begin">_begin</Item>
      <Item Name="Size">_size</Item>
      <Item Name="Capacity">_capacity</Item>
      <ArrayItems>
        <Size>_capacity</Size>
        <ValuePointer>_storage</ValuePointer>
      </ArrayItems>
    </Expand>
  </Type>

  <Type Name="Core::TStack&lt;*, *&gt;">
    <DisplayString>{{ size={_size}, capacity={_capacity} }}</DisplayString>
    <Expand>
      <Item Name="size">_size</Item>
      <Item Name="capacity">_capacity</Item>
      <ArrayItems>
        <Size>_size</Size>
        <ValuePointer>_storage</ValuePointer>
      </ArrayItems>
    </Expand>
  </Type>

  <Type Name="Core::TScalarVector&lt;*, 1&gt;">
    <DisplayString>{{ X={_data[0]} }}[1]</DisplayString>
    <Expand>
      <Item Name="Dim">1</Item>
      <ArrayItems>
        <Size>1</Size>
        <ValuePointer>_data</ValuePointer>
      </ArrayItems>
    </Expand>
  </Type>
  <Type Name="Core::TScalarVector&lt;*, 2&gt;">
    <DisplayString>{{ X={_data[0]}, Y={_data[1]} }}[2]</DisplayString>
    <Expand>
      <Item Name="Dim">2</Item>
      <ArrayItems>
        <Size>2</Size>
        <ValuePointer>_data</ValuePointer>
      </ArrayItems>
    </Expand>
  </Type>
  <Type Name="Core::TScalarVector&lt;*, 3&gt;">
    <DisplayString>{{ X={_data[0]}, Y={_data[1]}, Z={_data[2]} }}[3]</DisplayString>
    <Expand>
      <Item Name="Dim">3</Item>
      <ArrayItems>
        <Size>3</Size>
        <ValuePointer>_data</ValuePointer>
      </ArrayItems>
    </Expand>
  </Type>
  <Type Name="Core::TScalarVector&lt;*, 4&gt;">
    <DisplayString>{{ X={_data[0]}, Y={_data[1]}, Z={_data[2]}, W={_data[3]} }}[4]</DisplayString>
    <Expand>
      <Item Name="Dim">4</Item>
      <ArrayItems>
        <Size>4</Size>
        <ValuePointer>_data</ValuePointer>
      </ArrayItems>
    </Expand>
  </Type>

  <Type Name="Core::TScalarMatrix&lt;*, *, *&gt;">
    <Expand>
      <ArrayItems>
        <Direction>Forward</Direction>
        <Rank>2</Rank>
        <Size>$T3</Size>
        <ValuePointer>_data.raw</ValuePointer>
      </ArrayItems>
    </Expand>
  </Type>

  <Type Name="Core::TToken&lt;*, char, *, * &gt;">
    <DisplayString Condition="_handle != nullptr">{(const char*)(_handle+1),[(int)_handle-&gt;Length]s}</DisplayString>
    <DisplayString>empty</DisplayString>
    <StringView>(const char*)(_handle+1),[(int)_handle-&gt;Length]s</StringView>
    <Expand>
      <Item Name="String" Condition="_handle != nullptr">(const char*)(_handle+1),[(int)_handle-&gt;Length]s</Item>
      <Item Name="Length" Condition="_handle != nullptr">(int)_handle-&gt;Length</Item>
      <Item Name="HashValue" Condition="_handle != nullptr">(int)_handle-&gt;HashValue,X</Item>
    </Expand>
  </Type>
  <Type Name="Core::TToken&lt;*, wchar_t, *, * &gt;">
    <DisplayString Condition="_handle != nullptr">{(const wchar_t*)(_handle+1),[(int)_handle-&gt;Length]su}</DisplayString>
    <DisplayString Condition="_handle == nullptr">empty</DisplayString>
    <StringView>(const wchar_t*)(_handle+1),[(int)_handle-&gt;Length]su</StringView>
    <Expand>
      <Item Name="String" Condition="_handle != nullptr">(const wchar_t*)(_handle+1),[(int)_handle-&gt;Length]su</Item>
      <Item Name="Length" Condition="_handle != nullptr">(int)_handle-&gt;Length</Item>
      <Item Name="HashValue" Condition="_handle != nullptr">(int)_handle-&gt;HashValue,X</Item>
    </Expand>
  </Type>

  <Type Name="Core::FFileSystemNode">
    <DisplayString>{_token}</DisplayString>
    <Expand>
      <Item Name="Depth">_depth</Item>
      <LinkedListItems>
        <Size>_depth</Size>
        <HeadPointer>this</HeadPointer>
        <NextPointer>_parent._ptr</NextPointer>
        <ValueNode>*this</ValueNode>
      </LinkedListItems>
    </Expand>
  </Type>

  <Type Name="Core::FBasename">
    <DisplayString>{_basenameNoExt} {_extname}</DisplayString>
  </Type>
  <Type Name="Core::FDirpath">
    <DisplayString Condition="_path._ptr != nullptr">[{_path._ptr-&gt;_depth}] {*_path._ptr}"</DisplayString>
    <DisplayString>empty</DisplayString>
    <Expand>
      <Item Name="Depth">_path._ptr-&gt;_depth</Item>
      <Item Name="Path" Condition="_path._ptr != nullptr">*_path._ptr</Item>
    </Expand>
  </Type>

  <Type Name="Core::RTTI::TMetaTypeAtom&lt;* &gt;">
    <DisplayString>{_wrapper}</DisplayString>
    <Expand>
      <ExpandedItem>_wrapper</ExpandedItem>
    </Expand>
  </Type>

  <Type Name="Core::TRefPtr&lt;* &gt;">
    <DisplayString>{_ptr}</DisplayString>
    <Expand>
      <Item Name="RefCount" Condition="_ptr != nullptr">_ptr-&gt;_refCount</Item>
      <ExpandedItem>_ptr</ExpandedItem>
    </Expand>
  </Type>

  <Type Name="Core::TSafePtr&lt;* &gt;">
    <DisplayString>{_ptr}</DisplayString>
    <Expand>
      <Item Name="RefCount" Condition="_ptr != nullptr">_ptr-&gt;_refCount</Item>
      <Item Name="SafeCount" Condition="_ptr != nullptr">_ptr-&gt;_safeRefCount</Item>
      <ExpandedItem>_ptr</ExpandedItem>
    </Expand>
  </Type>

</AutoVisualizer>
