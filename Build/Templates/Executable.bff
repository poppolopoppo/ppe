
//------------------------------------------------------------------------------
// Executable Generation (.exe)
//------------------------------------------------------------------------------
; Inputs :
;   <BinaryPrefix>          prefix of the binary
;   <ProjectName>           name of the project
;   <ProjectPath>           path containing the source files
;   [PCHName]               precompiled header name (default value in Common.bff)
;   [ProjectDefines]        project specific defines (default value in Common.bff)
;   [ProjectDependencies]   project specific dependencies (default value in Common.bff)
;   [ProjectExcludedFiles]  project specific excluded files (default value in Common.bff)
;   [ProjectIncludes]       project specific includes (default value in Common.bff)
;   [ProjectLibraries]      project specific libraries (default value in Common.bff)
;   [ProjectPostBuild]      project specific post-build (default value in Common.bff)
;   [ProjectPreBuild]       project specific pre-build (default value in Common.bff)
//------------------------------------------------------------------------------

#include "Lib/LibraryHelpers.bff"

#if __WINDOWS__
//------------------------------------------------------------------------------
// Executable Resource File
//------------------------------------------------------------------------------
ObjectList( '$ProjectName$-Res' )
{
    Using( .ResourceCompiler )

    .CompilerInputFiles     = '$ProjectPath$\$ProjectName$.rc'
    .CompilerOutputPath     = '$ResourceDirectory$\$ProjectName$'
}
#endif

//------------------------------------------------------------------------------
// Executable Configurations
//------------------------------------------------------------------------------
ForEach( .CompileConfig in .AllCompileConfigs )
{
    Using( .CompileConfig )

#if __WINDOWS__
;    .LinkerOptions ; TODO : compiler specific
;    + ' /LIBPATH:"$OutputDirectory$/Eugen/$Platform$/$Config$"'
;    + ' /LIBPATH:"$OutputDirectory$/External/$Platform$/$Config$"'
#endif

    // Project directories
    .IntermediateDirectory  + '\$Platform$\$Config$'
    .OutputDirectory        + '\$Platform$\$Config$'

    // Project Libraries
    ForEach( .Lib in .ProjectLibraries )
    {
        .LinkerOptions + ' "$Lib$"'
        Export( .LinkerOptions )
    }

    // Binary executable
    Executable( '$ProjectName$-Exe-$Platform$-$Config$' )
    {
        .LinkerOutput = '$BinaryDirectory$\$BinaryPrefix$.$Config$.$Platform$.exe'
        .LinkerOptions + .ExecutableOptions

        .Libraries = {}
        ForEach( .ProjectDependency in .ProjectDependencies )
        {
            .Libraries + { '$ProjectDependency$-Lib-$Platform$-$Config$' }
            Export( .Libraries )
        }

        .Libraries + '$ProjectName$-Lib-$Platform$-$Config$'
#if __WINDOWS__
        .Libraries + '$ProjectName$-Res'
#endif
    }

    Alias( '$ProjectName$-$Platform$-$Config$' )
    {
        .Targets    = .ProjectPreBuild
                    + { '$ProjectName$-Exe-$Platform$-$Config$' }
                    + .ProjectPostBuild
    }
}

#include "Lib/Aliases.bff"
#include "Lib/RegisterProject.bff"
