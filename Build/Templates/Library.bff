
//------------------------------------------------------------------------------
// Library Generation (.lib or .dll)
//------------------------------------------------------------------------------
; Inputs :
;   <ProjectName>           name of the project
;   <ProjectPath>           path containing the source files
;   [ProjectPCHName]        project specific defines (default value in Defaults.bff)
;   [ProjectPublicDependencies]   project specific public dependencies like dll (default value in Defaults.bff)
;   [ProjectPrivateDependencies]   project specific private dependencies like lib (default value in Defaults.bff)
;   [ProjectForcedIncludes] project specific force includes (default value in Defaults.bff)
;   [ProjectExcludedFiles]  project specific excluded files (default value in Defaults.bff)
;   [ProjectIncludes]       project specific includes (default value in Defaults.bff)
;   [ProjectIsolatedFiles]  project files not included in unity builds but still compiled (default value in Defaults.bff)
;   [ProjectLibraries]      project specific libraries (default value in Defaults.bff)
;   [ProjectPCHConfig]      project Pre-Compiled Headers configuration to enable/disable PCH (default value in Defaults.bff)
//------------------------------------------------------------------------------

#include "Lib/LibraryHelpers.bff"

ForEach( .CompileConfig in .AllCompileConfigs )
{
    Using( .CompileConfig )

    .ProjectLinkType ? .ConfigLinkType

    Alias( '$ProjectName$-$Platform$-$Config$' )
    {
        .Targets = '$ProjectName$-$ProjectLinkType$-$Platform$-$Config$'
    }

    Alias( '$ProjectName$-$Platform$-$Config$-Purge' )
    {
        .Targets = '$ProjectName$-Purge-$Platform$-$Config$'
    }
}

#include "Lib/LibraryAliases.bff"
#include "Lib/RegisterProject.bff"
