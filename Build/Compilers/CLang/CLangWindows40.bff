#once

;   _____ _                         _  _    ___
;  / ____| |                       | || |  / _ \
; | |    | |     __ _ _ __   __ _  | || |_| | | |
; | |    | |    / _` | '_ \ / _` | |__   _| | | |
; | |____| |___| (_| | | | | (_| |    | |_| |_| |
;  \_____|______\__,_|_| |_|\__, |    |_(_)\___/
;                            __/ |
;                           |___/

#include "CLangWindowsBase.bff"

; active l'utilisation des Pre-Compiled Headers (/Yu, /Yc)
#define USE_PRECOMPILED_HEADERS
; utilise les .obj plutôt que les .lib comme input du linker
#define USE_LIBRARY_DEPENDENCY_INPUT
; choix entre la version 32-bit ou 64-bit de LLVM
#define USE_LLVM_40_X64

//------------------------------------------------------------------------------
// Global Properties
//------------------------------------------------------------------------------

#import VS140COMNTOOLS

#if WITH_VISUALSTUDIO_TOOLSET_140
.CLangWindows40PlatformToolset = 'v140'
#endif
#if WITH_VISUALSTUDIO_TOOLSET_141
//#import VS141COMNTOOLS ; TODO
.CLangWindows40PlatformToolset = 'v141'
#endif
Print( "Using CLang 4.0 with platform toolset $CLangWindows40PlatformToolset$" )

#import VS140COMNTOOLS

.CLangWindows40BasePath =
[
#if WITH_LLVMFORWINDOWS_X86
    .LLVMBasePath         = '$LLVMBasePathX86$'
#endif
#if WITH_LLVMFORWINDOWS_X64
#   if USE_LLVM_40_X64
    Print( "Using CLang 4.0 64-bit version" )
    .LLVMBasePath         = '$LLVMBasePathX64$'
#   endif
#endif
    Print( "Using CLang 4.0 installed in $LLVMBasePath$" )
#if WITH_VISUALSTUDIO_TOOLSET_140
    .LocalisationUID      = '$VS140CLUID$'
    .VSBasePath           = '$VS140COMNTOOLS$..\..'
#endif
#if WITH_VISUALSTUDIO_TOOLSET_141
    .LocalisationUID      = '$VS141CLUID$'
    .VSBasePath           = '$VS141COMNTOOLS$..\..'
    .VSToolsVersion       = '$VS141VERSION$'
    Print( "Using CLang 4.0 with platform toolset 141 version $VSToolsVersion$" )
#endif
    Print( "Using CLang 4.0 with localisation uid $LocalisationUID$" )
    .WindowsSDKBasePath   = .WindowsSDKBasePath10
    .WindowsSDKVersion    = .WindowsSDKVersion10
    Print( "Using CLang 4.0 with Windows 10 SDK $WindowsSDKVersion10$" )
]

//------------------------------------------------------------------------------
// Windows LLVM CLang
//------------------------------------------------------------------------------
Compiler( 'Compiler-CLangWindows40' )
{
    Using( .CLangWindows40BasePath )

    .Root       = '$LLVMBasePath$\msbuild-bin'
    .Executable = '$Root$\cl.exe'
    .ExtraFiles = {}
}

//------------------------------------------------------------------------------
// Resource Compiler
//------------------------------------------------------------------------------
.CLangWindows40ResourceCompiler =
[
    Using( .CLangWindows40BasePath )

    .Compiler                   = '$WindowsSDKBasePath$\Bin\x86\RC.exe'
    .CompilerOutputExtension    = '.res'
    .CompilerOptions            = '/nologo /fo"%2" %1'
]

//------------------------------------------------------------------------------
// Pre-Compiled Headers Configurations
//------------------------------------------------------------------------------
.CLangWindows40PCHEnabled   = .CLangWindowsBasePCHEnabled
.CLangWindows40PCHDisabled  = .CLangWindowsBasePCHDisabled

//------------------------------------------------------------------------------
// Base Config
//------------------------------------------------------------------------------
.CLangWindows40BaseConfig =
[
    Using( .CLangWindows40BasePath )

    .Defines = {}

    // version reportée par CLANG pour les headers systèmes :
#if WITH_VISUALSTUDIO_TOOLSET_140
    .CompilerOptions  = ' -fmsc-version=1900'
#endif
#if WITH_VISUALSTUDIO_TOOLSET_141
    .CompilerOptions  = ' -fmsc-version=1910'
#endif
    .CompilerOptions  + ' -Wno-dllimport-static-field-def'
                      + ' -Wno-microsoft-template'

#if WITH_VISUALSTUDIO_TOOLSET_140
    .IncludePaths =
    {
        '$VSBasePath$\VC\Include',
    }
#endif
#if WITH_VISUALSTUDIO_TOOLSET_141
    .IncludePaths =
    {
        '$VSBasePath$\VC\Tools\MSVC\$VSToolsVersion$\include',
        '$VSBasePath$\VC\Auxiliary\VS\include',
    }
#endif
    .IncludePaths +
    {
        '$WindowsSDKBasePath$\Include\$WindowsSDKVersion$\ucrt',
        '$WindowsSDKBasePath$\Include\$WindowsSDKVersion$\um',
        '$WindowsSDKBasePath$\Include\$WindowsSDKVersion$\shared',
    }
]

//------------------------------------------------------------------------------
// Platforms
//------------------------------------------------------------------------------
.CLangWindows40PlatformX86 =
[
    Using( .CLangWindows40BaseConfig )

    .Compiler           = 'Compiler-CLangWindows40'
    .ToolsBasePath      = '$LLVMBasePath$\bin'
    .Librarian          = '$ToolsBasePath$\llvm-lib.exe'
    .Linker             = '$ToolsBasePath$\lld-link.exe'

#if WITH_VISUALSTUDIO_TOOLSET_140
    .LinkerOptions      = ' /LIBPATH:"$VSBasePath$\VC\lib"'
#endif
#if WITH_VISUALSTUDIO_TOOLSET_141
    .LinkerOptions      = ' /LIBPATH:"$VSBasePath$\VC\Tools\MSVC\$VSToolsVersion$\lib\x86"'
                        + ' /LIBPATH:"$VSBasePath$\VC\Auxiliary\VS\lib\x86"'
#endif
    .LinkerOptions      + ' /LIBPATH:"$WindowsSDKBasePath$\Lib\$WindowsSDKVersion$\ucrt\x86"'
                        + ' /LIBPATH:"$WindowsSDKBasePath$\Lib\$WindowsSDKVersion$\um\x86"'
]
.CLangWindows40PlatformX86 + .CLangBasePlatformX86

.CLangWindows40PlatformX64 =
[
    Using( .CLangWindows40BaseConfig )

    .Compiler           = 'Compiler-CLangWindows40'
    .ToolsBasePath      = '$LLVMBasePath$\bin'

    .Librarian          = '$ToolsBasePath$\llvm-lib.exe'
    .Linker             = '$ToolsBasePath$\lld-link.exe'

#if WITH_VISUALSTUDIO_TOOLSET_140
    .LinkerOptions      = ' /LIBPATH:"$VSBasePath$\VC\lib\amd64"'
#endif
#if WITH_VISUALSTUDIO_TOOLSET_141
    .LinkerOptions      = ' /LIBPATH:"$VSBasePath$\VC\Tools\MSVC\$VSToolsVersion$\lib\x64"'
                        + ' /LIBPATH:"$VSBasePath$\VC\Auxiliary\VS\lib\x64"'
#endif
    .LinkerOptions      + ' /LIBPATH:"$WindowsSDKBasePath$\Lib\$WindowsSDKVersion$\ucrt\x64"'
                        + ' /LIBPATH:"$WindowsSDKBasePath$\Lib\$WindowsSDKVersion$\um\x64"'
]
.CLangWindows40PlatformX64 + .CLangBasePlatformX64

//------------------------------------------------------------------------------
// Configurations
//------------------------------------------------------------------------------
.CLangWindows40_X86Debug         = .CLangWindows40PlatformX86   + .CLangBaseDebugConfig
.CLangWindows40_X86FastDebug     = .CLangWindows40PlatformX86   + .CLangBaseFastDebugConfig
.CLangWindows40_X86Release       = .CLangWindows40PlatformX86   + .CLangBaseReleaseConfig
.CLangWindows40_X86Profiling     = .CLangWindows40PlatformX86   + .CLangBaseProfilingConfig
.CLangWindows40_X86Final         = .CLangWindows40PlatformX86   + .CLangBaseFinalConfig

.CLangWindows40_X64Debug           = .CLangWindows40PlatformX64     + .CLangBaseDebugConfig
.CLangWindows40_X64FastDebug       = .CLangWindows40PlatformX64     + .CLangBaseFastDebugConfig
.CLangWindows40_X64Release         = .CLangWindows40PlatformX64     + .CLangBaseReleaseConfig
.CLangWindows40_X64Profiling       = .CLangWindows40PlatformX64     + .CLangBaseProfilingConfig
.CLangWindows40_X64Final           = .CLangWindows40PlatformX64     + .CLangBaseFinalConfig

.CLangWindows40CompileConfigs =
{
    // X86
    .CLangWindows40_X86Debug,
    .CLangWindows40_X86FastDebug,
    .CLangWindows40_X86Release,
    .CLangWindows40_X86Profiling,
    .CLangWindows40_X86Final,

    // X64
    .CLangWindows40_X64Debug,
    .CLangWindows40_X64FastDebug,
    .CLangWindows40_X64Release,
    .CLangWindows40_X64Profiling,
    .CLangWindows40_X64Final,
}
