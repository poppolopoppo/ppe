
#once

;-------------------------------------------------------------------------------
; FBuild
;-------------------------------------------------------------------------------

;-------------------------------------------------------------------------------
; Windows Platform
;-------------------------------------------------------------------------------
.FBuildBin          = 'Build\FBuild.exe'
.VSBasePath         = 'D:/Program Files (x86)/Microsoft Visual Studio 12.0'
.WindowsSDKBasePath = 'C:/Program Files (x86)/Windows Kits/8.1'
.ClangBasePath      = 'D:/Program Files (x86)/LLVM'
.DirectX11SDKPath   = 'C:/Program Files (x86)/Microsoft DirectX SDK (June 2010)'

;-------------------------------------------------------------------------------
; Settings
;-------------------------------------------------------------------------------
Settings
{
    .Environment    = { "PATH=$VSBasePath$\Common7\IDE\;$VSBasePath$\VC\bin\",
                        "TMP=C:\Windows\Temp",
                        "SystemRoot=C:\Windows" }
    .CachePath      = "C:\.fbuild.cache"
}

//------------------------------------------------------------------------------
// Compilers
//------------------------------------------------------------------------------
Compiler( 'Compiler-x86' )
{
    .Root       = '$VSBasePath$\VC\bin'
    .Executable = '$Root$\cl.exe'
    .ExtraFiles = { '$Root$\c1.dll'
                    '$Root$\c1ast.dll',
                    '$Root$\c1xx.dll',
                    '$Root$\c1xxast.dll',
                    '$Root$\c2.dll',
                    '$Root$\msobj120.dll'
                    '$Root$\mspdb120.dll'
                    '$Root$\mspdbsrv.exe'
                    '$Root$\mspdbcore.dll'
                    '$Root$\mspft120.dll'
                    '$Root$\1036\clui.dll'
                    '$VSBasePath$\VC\redist\x86\Microsoft.VC120.CRT\msvcp120.dll'
                    '$VSBasePath$\VC\redist\x86\Microsoft.VC120.CRT\msvcr120.dll'
                    '$VSBasePath$\VC\redist\x86\Microsoft.VC120.CRT\vccorlib120.dll'
                  }
}
Compiler( 'Compiler-x64' )
{
    .Root       = '$VSBasePath$\VC\bin'
    .Executable = '$Root$\amd64\cl.exe'
    .ExtraFiles = { '$Root$\amd64\c1.dll'
                    '$Root$\amd64\c1ast.dll',
                    '$Root$\amd64\c1xx.dll',
                    '$Root$\amd64\c1xxast.dll',
                    '$Root$\amd64\c2.dll',
                    '$Root$\amd64\1036\clui.dll'
                    '$Root$\amd64\msobj120.dll'
                    '$Root$\amd64\mspdb120.dll'
                    '$Root$\amd64\mspdbsrv.exe'
                    '$Root$\amd64\mspdbcore.dll'
                    '$Root$\amd64\mspft120.dll'
                    '$VSBasePath$\VC\redist\x64\Microsoft.VC120.CRT\msvcp120.dll'
                    '$VSBasePath$\VC\redist\x64\Microsoft.VC120.CRT\msvcr120.dll'
                    '$VSBasePath$\VC\redist\x64\Microsoft.VC120.CRT\vccorlib120.dll'
                  }
}
Compiler( 'Compiler-x86Clang' )
{
    .Root       = '$ClangBasePath$\bin'
    .Executable = '$Root$\clang++.exe'
}

//------------------------------------------------------------------------------
// Configurations
//------------------------------------------------------------------------------
.MSVCBaseConfig =
[
    .AdditionalWarnings     = ' /we4062' // enumerator 'identifier' in a switch of enum 'enumeration' is not handled
                            + ' /we4263' // 'function' : member function does not override any base class virtual member function
                            //+ ' /we4265' // 'class': class has virtual functions, but destructor is not virtual
                            + ' /we4296' // 'operator': expression is always false
                            + ' /we4555' // expression has no effect; expected expression with side-effect
                            + ' /we4619' // #pragma warning : there is no warning number 'number'
                            + ' /we4640' // 'instance' : construction of local static object is not thread-safe
                            + ' /we4826' // Conversion from 'type1 ' to 'type_2' is sign-extended. This may cause unexpected runtime behavior.
                            + ' /we4836' // nonstandard extension used : 'type' : local types or unnamed types cannot be used as template arguments
                            + ' /we4905' // wide string literal cast to 'LPSTR'
                            + ' /we4906' // string literal cast to 'LPWSTR'

    .CompilerOptions        = '"%1" /TP /Z7 /d2Zi+ /bigobj /nologo /c /W4 /WX-'
                            //+ ' /Zc:inline'           // Remove unreferenced COMDATs at compile time (VS2013.2+)
                            //+ ' /Zc:strictStrings'    // Require const only usage of string literals (VS2013+)
                            + ' /Zc:wchar_t'            // http://msdn.microsoft.com/fr-fr/library/dh8che7s.aspx
                            + ' /Zc:forScope'           // http://msdn.microsoft.com/fr-fr/library/84wcsx8x.aspx
                            + ' /EHsc'                  // C4530
                            + ' /fp:fast'
                            + ' /D"WIN32_LEAN_AND_MEAN" /D"_WIN32" /D"__WINDOWS__"'
                            + ' /D"_UNICODE" /D"UNICODE"'
                            + ' /D"VC_EXTRALEAN" /D"DBGHELP_TRANSLATE_TCHAR" /D"NOMINMAX"'

    .PCHOptions             = .CompilerOptions
                            + ' /Fp"%2" /Fo"%3"'
    .CompilerOptions        + ' /Fo"%2"'
                            + .AdditionalWarnings

    .LibrarianOptions       = ' /LARGEADDRESSAWARE /NOLOGO /OUT:"%2" "%1"'

    .LinkerOptions          = ' /LARGEADDRESSAWARE /NOLOGO /OUT:"%2" "%1"'
                            + ' /ENTRY:"wWinMainCRTStartup"'    // UNICODE entry point
                            + ' /IGNORE:4001' ; don't complain about linking libs only


    // Defines

    .CompilerDebugDefines       = ' /D_DEBUG /DDEBUG   /D"_SECURE_SCL=1" /D"_ITERATOR_DEBUG_LEVEL=2"'
    .CompilerReleaseDefines     = ' /DNDEBUG /DRELEASE /D"_SECURE_SCL=0" /D"_ITERATOR_DEBUG_LEVEL=0"'
    .CompilerProfilerDefines    = ' /DPROFILING_ENABLED'
    .CompilerFinalDefines       = ' /DNDEBUG /DRELEASE /DFINAL_RELEASE /D"_SECURE_SCL=0" /D"_ITERATOR_DEBUG_LEVEL=0"'

    // Optimizations
    .CompilerDebugOptimizations     = ' /MDd /Od /sdl /RTC1 /GS /Oy- /GR'
    .CompilerReleaseOptimizations   = ' /MD /Ox /Oy /Oi /GS- /GF /GL /Gy /Gw /GR-'
                                    + ' /Qvec-report:2' // http://msdn.microsoft.com/en-us/library/vstudio/jj614596.aspx
    .CompilerFinalOptimizations     = '$CompilerReleaseOptimizations$'

    .LibrarianDebugOptimizations    = ''
    .LibrarianReleaseOptimizations  = ' /LTCG'
    .LibrarianFinalOptimizations    = '$LibrarianReleaseOptimizations$'

    .LinkerDebugOptimizations       = ' /DEBUG'
    .LinkerReleaseOptimizations     = ' /DEBUG /LTCG /OPT:REF,ICF'      // std ICF iterations count in release (2 according to http://msdn.microsoft.com/en-us/library/bxwfs976.aspx)
    .LinkerFinalOptimizations       = ' /DEBUG /LTCG /OPT:REF,ICF=4'    // more ICF iterations count in final to merge more duplicate code (measured, truly effective)

    .LinkerWindowsLibs              = ' /SUBSYSTEM:WINDOWS'
                                    + ' kernel32.lib'
                                    + ' User32.lib'
                                    + ' Shell32.lib'
                                    + ' Comctl32.lib'
                                    + ' Gdi32.lib'

    .LinkerConsoleLibs              = ' /SUBSYSTEM:CONSOLE'
                                    + ' kernel32.lib'
                                    + ' User32.lib'

    .LinkerDebugLibs                = .LinkerWindowsLibs
                                    + ' MSVCRTD.LIB'
    .LinkerReleaseLibs              = .LinkerWindowsLibs
                                    + ' MSVCRT.LIB'
    .LinkerFinalLibs                = '$LinkerReleaseLibs$'

    .BaseIncludePaths       = ' /I"./"'
                            + ' /I"$VSBasePath$/VC/include/"'
                            + ' /I"$WindowsSDKBasePath$/include/um"'
                            + ' /I"$WindowsSDKBasePath$/include/shared"'

    .CompilerOptions        + .BaseIncludePaths
    .PCHOptions             + .BaseIncludePaths

    .WindowsLibPaths        = '$WindowsSDKBasePath$/lib/winv6.3/um'

    .UseExceptions          = ' /EHsc'
]

// X86
//------------------------------------------------------------------------------
.X86BaseConfig =
[
    Using( .MSVCBaseConfig )
    .Platform               = 'x86'
    .ToolsBasePath          = '$VSBasePath$\VC\bin'
    .Compiler               = 'Compiler-x86'
    .Librarian              = '$ToolsBasePath$\lib.exe'
    .Linker                 = '$ToolsBasePath$\link.exe'
    .CompilerOptions        + ' /arch:SSE2'
                            + ' /DWIN32 /DARCH_X86'
    .PCHOptions             + ' /arch:SSE2'
                            + ' /DWIN32 /DARCH_X86'
    .LinkerOptions          + ' /MACHINE:X86'
    .LinkerOptions          + ' /LIBPATH:"$WindowsLibPaths$/x86" /LIBPATH:"$VSBasePath$/VC/lib"'
]
.X86DebugConfig =
[
    Using( .X86BaseConfig )
    .Config                 = 'Debug'
    .CompilerOptions        + .CompilerDebugDefines
                            + .CompilerDebugOptimizations
    .PCHOptions             + .CompilerDebugDefines
                            + .CompilerDebugOptimizations
    .LibrarianOptions       + .LibrarianDebugOptimizations
    .LinkerOptions          + .LinkerDebugOptimizations
                            + .LinkerDebugLibs
]
.X86ReleaseConfig =
[
    Using( .X86BaseConfig )
    .Config                 = 'Release'
    .CompilerOptions        + .CompilerReleaseDefines
                            + .CompilerReleaseOptimizations
    .PCHOptions             + .CompilerReleaseDefines
                            + .CompilerReleaseOptimizations
    .LibrarianOptions       + .LibrarianReleaseOptimizations
    .LinkerOptions          + .LinkerReleaseOptimizations
                            + .LinkerReleaseLibs
]
.X86FinalConfig =
[
    Using( .X86BaseConfig )
    .Config                 = 'Final'
    .CompilerOptions        + .CompilerFinalDefines
                            + .CompilerFinalOptimizations
    .PCHOptions             + .CompilerFinalDefines
                            + .CompilerFinalOptimizations
    .LibrarianOptions       + .LibrarianFinalOptimizations
    .LinkerOptions          + .LinkerFinalOptimizations
                            + .LinkerFinalLibs
]
.X86ProfileConfig =
[
    Using( .X86ReleaseConfig ) // Note: based on Release config
    .Config                 = 'Profile'
    .CompilerOptions        + .CompilerProfilerDefines
    .PCHOptions             + .CompilerProfilerDefines
]

// X64
//------------------------------------------------------------------------------
.X64BaseConfig =
[
    Using( .MSVCBaseConfig )
    .Platform               = 'x64'
    .ToolsBasePath          = '$VSBasePath$\VC\bin\x86_amd64'
    .Compiler               = 'Compiler-x64'
    .Librarian              = '$ToolsBasePath$\lib.exe'
    .Linker                 = '$ToolsBasePath$\link.exe'
    .CompilerOptions        + ' /DWIN64 /DARCH_X64'
    .PCHOptions             + ' /DWIN64 /DARCH_X64'
    .LinkerOptions          + ' /MACHINE:X64'
    .LinkerOptions          + ' /LIBPATH:"$WindowsLibPaths$/x64" /LIBPATH:"$VSBasePath$/VC/lib/amd64"'
]
.X64DebugConfig =
[
    Using( .X64BaseConfig )
    .Config                 = 'Debug'
    .CompilerOptions        + .CompilerDebugDefines
                            + .CompilerDebugOptimizations
    .PCHOptions             + .CompilerDebugDefines
                            + .CompilerDebugOptimizations
    .LibrarianOptions       + .LibrarianDebugOptimizations
    .LinkerOptions          + .LinkerDebugOptimizations
                            + .LinkerDebugLibs
]
.X64ReleaseConfig =
[
    Using( .X64BaseConfig )
    .Config                 = 'Release'
    .CompilerOptions        + .CompilerReleaseDefines
                            + .CompilerReleaseOptimizations
    .PCHOptions             + .CompilerReleaseDefines
                            + .CompilerReleaseOptimizations
    .LibrarianOptions       + .LibrarianReleaseOptimizations
    .LinkerOptions          + .LinkerReleaseOptimizations
                            + .LinkerReleaseLibs
]
.X64FinalConfig =
[
    Using( .X64BaseConfig )
    .Config                 = 'Final'
    .CompilerOptions        + .CompilerFinalDefines
                            + .CompilerFinalOptimizations
    .PCHOptions             + .CompilerFinalDefines
                            + .CompilerFinalOptimizations
    .LibrarianOptions       + .LibrarianFinalOptimizations
    .LinkerOptions          + .LinkerFinalOptimizations
                            + .LinkerFinalLibs
]
.X64ProfileConfig =
[
    Using( .X64ReleaseConfig ) // Note: based on Release config
    .Config                 = 'Profile'
    .CompilerOptions        + .CompilerProfilerDefines
    .PCHOptions             + .CompilerProfilerDefines
]

// X86 Clang
//------------------------------------------------------------------------------
.X86ClangConfig =
[
    .ToolsBasePath          = '$ClangBasePath$\bin'
    .Compiler               = 'Compiler-x86Clang'
    .Librarian              = '$ToolsBasePath$\llvm-ar.exe'
    .Linker                 = '$VSBasePath$\VC\bin\link.exe' //'$ToolsBasePath$\lld.exe'

    .WindowsLibPaths        = '$WindowsSDKBasePath$/lib/winv6.3/um'

    .CompilerOptions        = '-o"%2" "%1" -c -g'
                            + ' -I"./"'
                            + ' -I"$VSBasePath$/VC/include/"'
                            + ' -I"$WindowsSDKBasePath$/include/um"'
                            + ' -I"$WindowsSDKBasePath$/include/shared"'
                            + ' -D"WIN32_LEAN_AND_MEAN" -D_WIN32 -D__WINDOWS__'
                            + ' -DWIN32 -D_WIN32'
                            + ' -DRELEASE'
                            + ' -D"_X86_=1" -D_M_IX86'
                            + ' -D"_INTEGRAL_MAX_BITS=64"'
                            + ' -D"_MSC_VER=1500"'
                            + ' -D"ARCH_X86"'

                            // MS compatibility
                            + ' -fms-compatibility'
                            + ' -fms-extensions'
                            + ' -fmsc-version=1700'
                            + ' -mms-bitfields'
                            + ' -Wno-microsoft' // suppress "enumerator value is not representable in the underlying type 'int' [-Wmicrosoft]'"
                            + ' -Wno-#pragma-messages'

                            + ' -Werror'                    // warnings as errors
                            + ' -fno-exceptions'
                            + ' -fno-rtti'
                            + ' -Wno-ignored-attributes' // ignore 'restrict, noalias' keyword
                            + ' -Wno-c++11-extensions'
                            + ' -Wno-c++11-long-long' // don't want about use of "long long"
                            + ' -Wno-deprecated-declarations'
                            + ' -Wno-unused-value' // TODO: Need to re-enable this
                            + ' -integrated-as' // use the built-in assembler (don't try to use gcc)

                            + ' -fdata-sections'
                            + ' -ffunction-sections'

    .PCHOptions             = .CompilerOptions // TODO: Configure this properly

    .LibrarianOptions       = 'rc "%2" "%1"' // NOTE: output must come first
    .LinkerOptions          = '/NODEFAULTLIB /WX /NOLOGO /INCREMENTAL:NO /OUT:"%2" "%1" /DEBUG'
                            + ' /IGNORE:4001' ; don't complain about linking libs only
                            + ' /LIBPATH:"$WindowsLibPaths$/x86" /LIBPATH:"$VSBasePath$/VC/lib"'
                            + ' /MACHINE:X86'

    .Platform               = 'x86Clang'
    .Config                 = 'Debug'

    .UseExceptions          = ' -fexceptions'
]

// Configurations
//------------------------------------------------------------------------------
.Configs = { .X86DebugConfig, .X86ProfileConfig, .X86ReleaseConfig, .X86FinalConfig,
             .X64DebugConfig, .X64ProfileConfig, .X64ReleaseConfig, .X64FinalConfig,
             .X86ClangConfig }

.Configs_Windows_MSVC   = { .X86DebugConfig, .X86ProfileConfig, .X86ReleaseConfig, .X86FinalConfig,
                            .X64DebugConfig, .X64ProfileConfig, .X64ReleaseConfig, .X64FinalConfig }
.Configs_Windows_Clang  = { .X86ClangConfig }

//------------------------------------------------------------------------------

// Resource Compiler
//------------------------------------------------------------------------------
.ResourceCompiler =
[
    .Compiler                   = '$WindowsSDKBasePath$\Bin\x86\RC.exe'
    .CompilerOutputExtension    = '.res'
    .CompilerOptions            = '/nologo /fo"%2" %1'
]
